import React, { PropTypes } from 'react';
import vudu from 'vudu';

const scale = {
  h6: '.75rem',
  h5: '.875rem',
  h4: '1rem',
  h3: '1.25rem',
  h2: '1.5rem',
  h1: '2rem',
  h0: '4rem'
};

const breakpoints = {
  sm: '40em',
  md: '52em',
  lg: '64em'
};

const Text = (props) => {
  
  const size = Object.keys(props)
    .filter(p => p === 'size' && props[p] !== null)
    .map(p => {
      return vudu({
        [p]: {
          fontSize: typeof props[p] === 'string' ? scale[props[p]] : `${props[p]}px`
        }
      })[p];
    });

  const responsiveClasses = Object.keys(props)
    .filter(p => p === 'sm' || p === 'md' || p === 'lg')
    .map(key => ({key, value: props[key]}))
    .filter(p => p.value !== null)
    .map(p => {
      return vudu({
        [p.key]: {
          [`@media (min-width: ${breakpoints[p.key]})`]: {
            fontSize: typeof p.value === 'string' ? scale[p.value] : `${p.value}px`
          }
        }
      })[p.key];
    }).join(' ');

  const renderTag = () => {
    switch (props.tag) {
      case 'h1':
        return <h1 className={`${size} ${responsiveClasses}`}>{props.children}</h1>;
      case 'h2':
        return <h2 className={`${size} ${responsiveClasses}`}>{props.children}</h2>;
      case 'h3':
        return <h3 className={`${size} ${responsiveClasses}`}>{props.children}</h3>;
      case 'h4':
        return <h4 className={`${size} ${responsiveClasses}`}>{props.children}</h4>;
      case 'h5':
        return <h5 className={`${size} ${responsiveClasses}`}>{props.children}</h5>;
      case 'h6':
        return <h6 className={`${size} ${responsiveClasses}`}>{props.children}</h6>;
      case 'p':
        return <p className={`${size} ${responsiveClasses}`}>{props.children}</p>;
      case 'span':
        return <span className={`${size} ${responsiveClasses}`}>{props.children}</span>;
    }
  };
  return (
    <div>
      {renderTag()}
    </div>
  );
};

Text.propTypes = {
  tag: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'span']).isRequired,
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  sm: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  md: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  lg: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};

Text.defaultProps = {
  tag: 'h4',
  size: null,
  sm: null,
  md: null,
  lg: null
};

export default Text;

